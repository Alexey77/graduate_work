services:
  assistant_service:
    build: .
    image: assistant_service
    container_name: assistant_service
    restart: always
    expose:
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - mongo
    env_file: .env
    networks:
      - common-net
    healthcheck:
      test: ["CMD-SHELL", "curl -I http://localhost:8000/api/v1/healthy/live|| exit 1"]
      interval: 10s
      timeout: 2s
      retries: 5
  rabbitmq:
    image: rabbitmq:3.13.7-alpine
    hostname: ${RABBITMQ_HOST}
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - common-net
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
  mongo:
      image: mongo:8.0.1-noble
      container_name: mongodb
      restart: always
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      ports:
        - "27017:27017"
      networks:
        - common-net
      volumes:
        - mongo-data:/data/db

volumes:
  rabbitmq-data:
  mongo-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MONGODB_VOLUME_PATH}

networks:
  common-net:
    name: cinema_network