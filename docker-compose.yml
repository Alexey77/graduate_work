version: "3.9"

services:
  assistant_service:
    build: ./assistant_service
    ports:
      - "8000:8000"
    env_file:
      - ./assistant_service/.env
    depends_on:
      - mongo
      - llm_service
      - text_vector_service
      - rabbitmq

  test_assistant_service:
    build:
      context: ./assistant_service
      dockerfile: Dockerfile.test
    depends_on:
      - assistant_service
    environment:
      - SERVICE_HOST=assistant_service
      - SERVICE_PORT=8000
    command: pytest -s

  llm_service:
    build: ./llm_service
    ports:
      - "50051:50051"
    env_file:
      - ./llm_service/.env
    depends_on:
      - text_vector_service

  text_vector_service:
    build: ./text_vector_service
    ports:
      - "50052:50052"
    env_file:
      - ./text_vector_service/.env
    depends_on:
      - qdrant
    volumes:
      - text_models:/app/models


  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    restart: always


  rabbitmq:
    image: rabbitmq:3.13.7-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: 1234

  mongo:
    image: mongo:8.0.1-noble
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
        - mongo-data:/data/db
    ports:
      - "27017:27017"


  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - assistant_service

volumes:
  rabbitmq-data:
  mongo-data:
  qdrant-data:
  text_models:
